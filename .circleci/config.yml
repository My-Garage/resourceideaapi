version: 2.1
machine:
  environment:
    # Add the Postgres 9.6 binaries to the path.
    PATH: /usr/lib/postgresql/9.6/bin/:$PATH

  pre:
    # Start Postgres 9.6.
    - sudo service postgresql start 9.6

    # Create a new test database.
    - sudo -u postgres psql -p 5432 -c "create database resourceidea;"
    
jobs:
  build:
    docker:
      - image: circleci/python:3.6.4
        environment:
          PGUSER: root
          SECRET_KEY: SENwSzdDakJhNDJteTQK
          DB_NAME: resourceidea
          DB_HOST: resourceideaapi-do-user-7537729-0.a.db.ondigitalocean.com
          DB_USER: resourcepostgres
          DB_PASSWORD: wzk2w2tugj7ey8v8
          DB_PORT: 25060

      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: resourcepostgres
          POSTGRES_DB: resourceidea

    working_directory: ~/app

    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: install dependencies.
          command: sudo pip3 install -r requirements.txt && sudo pip3 install -r requirements.dev.txt

      - run:
          name: Waiting for Postgres to be ready.
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1

      - run:
          name: pull image and create db.
          command: |
            export SECRET_KEY=SENwSzdDakJhNDJteTQK 
            python3 manage.py makemigrations
            python3 manage.py migrate

      - run:
          name: run tests.
          command: export SECRET_KEY=SENwSzdDakJhNDJteTQK && pytest 
          timeout: 5000

  deploy:
    docker:
      - image: circleci/python:3.6.4
    environment:
      IMAGE_NAME: 1994scott/resourceapi
    working_directory: ~/app
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image.
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Push Docker Image.
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$CIRCLE_SHA1
            docker push $IMAGE_NAME:$CIRCLE_SHA1
      - run:
          name: Install envsubst.
          command: |
            sudo apt-get update && sudo apt-get -y install gettext-base
      - run:
          name: Install kubectl.
          command: |
            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod u+x ./kubectl
      - run:
          name: Deploy Code
          command: chmod +x config_scripts/ci-deploy.sh && config_scripts/ci-deploy.sh
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: 
                - develop
                - scott/api-deploy